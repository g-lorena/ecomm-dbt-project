name: Build and Run Docker container

on:
  push:
    branches:
      - main

env:
  DBT_ACCESS_TOKEN: ${{ secrets.DBT_ACCESS_TOKEN }}
  AWS_REGION: "eu-west-3"
  DOCKER_IMAGE: ecomm-dbt-project:1.0.1

permissions:
  id-token: write   # This is required for requesting the JWT
  contents: read    # This is required for actions/checkout


jobs:
  run-container:
    name: Deploy your dockerize main Python on ECR
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Verify Secret Access
        run: |
          echo "DBT_ACCESS_TOKEN: ${{ secrets.DBT_ACCESS_TOKEN }}"
      
      - name: Build Docker image and tag image 
        id: build-image
        run: |
          docker build -t ${{ env.DOCKER_IMAGE }} .
          docker tag ${{ env.DOCKER_IMAGE }} 957951454565.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.DOCKER_IMAGE }}
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::957951454565:role/github-oidc-role
          role-session-name: rolesessionname
          aws-region:  ${{ env.AWS_REGION }}
      
     # - name: Run Docker container
     #   id: run-container
     #   run: |
     #     docker run -e DBT_ACCESS_TOKEN=$DBT_ACCESS_TOKEN my-docker-image:latest

      - name: login into ecr
        id: login-ecr
        run: |
          aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin 957951454565.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com

      - name: verify image 
        run: |
          docker images

      - name : push Docker image in ECR
        id: push-image
        run: |
          docker push 957951454565.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.DOCKER_IMAGE }}

      - name: Set up project directory
        run: |
          echo "Setting up project directory"
          PROJECT_DIR=$(pwd)
          echo "Project directory: $PROJECT_DIR"

      - name: Debug - List Files in Project Directory
        run: |
          ls -R $PROJECT_DIR

      - name : push Airflow Dags in S3 Bucket
        id: push-dag
        run: |
          aws s3 sync ecom_dag.py s3://dbt-projects-airflow-bucket/DAGs/ecom_dag.py
        
      - name : push Airflow requirements in S3 Bucket
        id: push-requirements
        run: |
          aws s3 sync $PROJECT_DIR/airflow_requirements.txt s3://dbt-projects-airflow-bucket/airflow_requirements.txt